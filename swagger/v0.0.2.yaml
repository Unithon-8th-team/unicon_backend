openapi: 3.0.0
info:
  title: 화내줄께
  version: 0.0.2
servers:
  - url: http://localhost:3000
    description: Local server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

tags:
  - name: Auth
    description: 로그인 및 인증 관련 API
  - name: Users
    description: 사용자 정보 관련 API
  - name: AI
    description: AI 대화 API
  - name: Shop
    description: 상점 관련 API
  - name: Notifications
    description: 알림 관련 API
  - name: Purchase
    description: 구매 관련 API

paths:
  /auth/kakao:
    post:
      tags:
        - Auth
      summary: 카카오 로그인
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: jwt.access.token
                  refreshToken:
                    type: string
                    example: jwt.refresh.token
                  isProfileComplete:
                    type: boolean
                    example: true
                    description: isProfileComplete가 false면 추가 프로필 입력 필요

  /users/{userId}/settings:
    post:
      tags:
        - Users
      summary: 유저 프로필값 초기 셋팅
      security:
        - bearerAuth: []
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: integer
          description: Numeric ID of the user to get
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                  example: 새닉네임
                  description: 변경할 닉네임
                birthDate:
                  type: string
                  example: YYYY-MM-DD
                  description: YYYY-MM-DD 형식의 생년월일
                sex:
                  type: string
                  description: 성별 (M-남성, F-여성, N-선택 안함/기타)

      responses:
        '200':
          description: 수정 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: '123'
                  email:
                    type: string
                    example: user@example.com
                  nickname:
                    type: string
                    example: 홍길동

  /users/{userId}/profile:
    get:
      tags:
        - Users
      summary: 내 프로필 조회
      security:
        - bearerAuth: []
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: integer
          description: Numeric ID of the user to get
      responses:
        '200':
          description: 프로필 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: '123'
                  profileImageUrl:
                    type: string
                    example: https://cdn.example.com/profiles/123/profile.png
                  email:
                    type: string
                    example: user@example.com
                  nickname:
                    type: string
                    example: 홍길동
                  birthDate:
                    type: string
                    example: YYYY-MM-DD
                    description: YYYY-MM-DD 형식의 생년월일
                  sex:
                    type: string
                    description: 성별 (M-남성, F-여성, N-선택 안함/기타)
    post:
      tags:
        - Users
      summary: 유저 프로필 수정
      description: 해당 값이 있으면 프로필을 수정합니다.
        생년월일, 성별은 선택 사항이며, 이미지 파일은 jpg, png 등 지원되는 형식이어야 합니다.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: integer
          description: Numeric ID of the user to get
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                  example: 새닉네임
                  description: 변경할 닉네임
                birthDate:
                  type: string
                  example: YYYY-MM-DD
                  description: YYYY-MM-DD 형식의 생년월일
                sex:
                  type: string
                  description: 성별 (M-남성, F-여성, N-선택 안함/기타)
                file:
                  type: string
                  format: binary
                  description: 업로드할 이미지 파일 (jpg, png 등)
      responses:
        '200':
          description: 수정 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: '123'
                  profileImageUrl:
                    type: string
                    example: https://cdn.example.com/profiles/123/profile.png
                  email:
                    type: string
                    example: user@example.com
                  nickname:
                    type: string
                    example: 홍길동

  /users/{userId}/avatar/clothes:
    post:
      tags:
        - Users
      summary: 캐릭터 의상 착용
      security:
        - bearerAuth: []
      description: 인벤토리의 아이템을 캐릭터에 착용시킵니다.
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: integer
          description: Numeric ID of the user to get
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                inventoryItemIds:
                  type: array
                  items:
                    type: string
                  example: ['inv_789', 'inv_456', 'inv_123']
              required:
                - inventoryItemIds
      responses:
        '200':
          description: 착용 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 착용 완료
                  equippedItem:
                    type: object
                    properties:
                      id:
                        type: string
                        example: inv_789
                      name:
                        type: string
                        example: 붉은 티셔츠

  /ai/{userId}/chat:
    post:
      tags:
        - AI
      summary: AI 대화
      security:
        - bearerAuth: []
      description: >
        AI와 대화를 진행.  
        1일 최대 5회 무료 가능, 초과 시 코인 사용 또는 구매 필요.  
        무료 횟수를 다 사용하면 대화 종료 시 10코인 지급.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 오늘 날씨 어때?
                userAnger:
                  type: integer
                  example: 3
                aiAnger:
                  type: integer
                  example: 3
      responses:
        '200':
          description: 정상 대화 가능 시
          content:
            application/json:
              schema:
                type: object
                properties:
                  reply:
                    type: string
                    example: 오늘은 맑고 기온은 26도입니다.
                  remainingFreeChats:
                    type: integer
                    example: 3
        '429':
          description: 무료 횟수 초과
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: FREE_CHAT_LIMIT_EXCEEDED
                  message:
                    type: string
                    example: 오늘의 무료 대화 횟수를 모두 사용했습니다. 코인을 사용하거나 구매해주세요.

  /ai/{userId}/generate-image:
    post:
      summary: 이미지 생성
      description: 사용자가 입력한 텍스트 설명을 바탕으로 AI가 여러 이미지를 생성하여 URL 배열을 반환합니다.
      tags:
        - AI
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: '험상궂게 생긴 안경 쓴 사람'
                  description: 이미지 생성을 위한 텍스트 설명
              required:
                - description
      responses:
        '200':
          description: 이미지 생성 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  imageUrls:
                    type: array
                    description: 생성된 이미지 URL 리스트
                    items:
                      type: string
                      format: uri
                      example: 'https://your-cdn.com/generated-image-123.png'
        '400':
          description: 잘못된 요청 (예 description 누락)
        '500':
          description: 서버 내부 오류

  /shop/items:
    get:
      tags:
        - Shop
      summary: 상점 아이템 목록 조회
      security:
        - bearerAuth: []
      description: 상점에 진열된 의상 목록을 가져옵니다.
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: cloth_001
                    name:
                      type: string
                      example: 붉은 티셔츠
                    priceCoin:
                      type: integer
                      example: 50
                    imageUrl:
                      type: string
                      example: https://cdn.example.com/clothes/red_tshirt.png

  /shop/purchase:
    post:
      tags:
        - Shop
      summary: 아이템 구매
      description: 사용자의 코인을 차감하고 인벤토리에 아이템을 추가합니다.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                itemId:
                  type: string
                  example: cloth_001
                  description: 구매하려는 아이템 ID
      responses:
        '200':
          description: 구매 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 구매 완료되었습니다.
                  coin:
                    type: integer
                    example: 20
                    description: 구매 후 남은 코인 잔액
                  inventoryItemId:
                    type: string
                    example: inv_789
                    description: 새로 추가된 인벤토리 아이템 ID
        '400':
          description: 구매 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: INSUFFICIENT_COIN
                  message:
                    type: string
                    example: 코인이 부족합니다.
        '401':
          description: 인증 실패
        '404':
          description: 아이템을 찾을 수 없음

  /shop/users/{userId}/inventory:
    get:
      tags:
        - Shop
      summary: 내 인벤토리 조회
      security:
        - bearerAuth: []
      description: 사용자가 소유한 의상 목록을 반환합니다.
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: integer
          description: Numeric ID of the user to get
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: inv_789
                    itemId:
                      type: string
                      example: cloth_001
                    name:
                      type: string
                      example: 붉은 티셔츠
                    equipped:
                      type: boolean
                      example: false

  /purchase/verify:
    post:
      tags:
        - Purchase
      summary: 구글 인앱 구매 토큰 검증 및 처리
      description: 클라이언트로부터 받은 구글 purchaseToken을 검증하고, 구매 내역을 처리합니다.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - purchaseToken
                - productId
              properties:
                purchaseToken:
                  type: string
                  description: 구글 인앱 구매 토큰
                  example: 'ya29.a0AfH6SM...'
                productId:
                  type: string
                  description: 구매한 상품의 ID
                  example: 'com.example.app.product1'
      responses:
        '200':
          description: 구매 검증 및 처리 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: '구매 검증 및 처리 완료'
        '400':
          description: 요청 파라미터 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'purchaseToken이 누락되었습니다.'
        '401':
          description: 인증 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: '유효하지 않은 토큰입니다.'
        '500':
          description: 서버 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: '서버 오류가 발생했습니다.'

  /notifications/unread-count:
    get:
      summary: 읽지 않은 알림 개수 조회
      description: 사용자의 읽지 않은 알림 개수를 반환합니다.
      tags:
        - Notifications
      responses:
        '200':
          description: 읽지 않은 알림 개수 반환 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  unreadCount:
                    type: integer
                    example: 5
        '401':
          description: 인증 실패
        '500':
          description: 서버 오류

  /notifications:
    get:
      summary: 사용자 알림 목록 조회
      description: 사용자가 받은 알림 항목들을 조회합니다. (프론트에서는 최근 20개만 보여주도록 하는게 좋을것 같아요)
      tags:
        - Notifications
      parameters:
        - name: page
          in: query
          description: 페이지 번호 (기본값 1)
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: 페이지당 알림 개수 (기본값 20)
          required: false
          schema:
            type: integer
            default: 20
        - name: status
          in: query
          description: 알림 상태 필터 ('read' 또는 'unread')
          required: false
          schema:
            type: string
            enum:
              - read
              - unread
      responses:
        '200':
          description: 알림 목록 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalCount:
                    type: integer
                    example: 45
                  notifications:
                    type: array
                    items:
                      type: object
                      properties:
                        notificationId:
                          type: string
                          example: 'notif_001'
                        title:
                          type: string
                          example: '채팅 답장 도착'
                        message:
                          type: string
                          example: '홍길동님이 답장을 보냈습니다.'
                        receivedAt:
                          type: string
                          format: date-time
                          example: '2025-08-11T14:32:00Z'
                        status:
                          type: string
                          enum:
                            - read
                            - unread
                          example: 'unread'
        '401':
          description: 인증 실패
        '500':
          description: 서버 오류
